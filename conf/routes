# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

#Dynamic parts
#GET   /clients/:id          controllers.Clients.show(id: Long)  

#Dynamic parts spanning several /
#If you want a dynamic part to capture more than one URI path segment, separated by forward slashes, 
#you can define a dynamic part using the *id syntax, which uses the .* regular expression:
#GET   /files/*name          controllers.Application.download(name)  
#Here for a request like GET /files/images/logo.png, the name dynamic part will capture the images/logo.png value.

#Dynamic parts with custom regular expressions
#You can also define your own regular expression for the dynamic part, using the $id<regex> syntax:
#GET   /clients/$id<[0-9]+>  controllers.Clients.show(id: Long)  

#Parameters with fixed values
# Extract the page parameter from the path, or f ix the value for /
#GET   /                     controllers.Application.show(page = "home")
#GET   /:page                controllers.Application.show(page)

#Parameters with default values
# Pagination links, like /clients?page=3
#GET   /clients              controllers.Clients.list(page: Int ?= 1)

#Optional parameters
# The version parameter is optional. E.g. /api/list-all?version=3.0
#GET   /api/list-all         controllers.Api.list(Option[version])

# Home page
GET  /                           controllers.Application.index

# Map static resources from the /public folder to the /assets URL path
GET  /assets/*file               controllers.Assets.at(path="/public", file)

GET  /day                        controllers.Application.day(day: Int ?= 5)
GET  /about                      controllers.Application.about
GET  /contact                    controllers.Application.contact

GET  /user                       controllers.UserController.user
POST /user                       controllers.UserController.edituser
GET  /changepassword             controllers.UserController.password
POST /changepassword             controllers.UserController.changepassword

# Authentication
GET  /login                      controllers.Auth.login(afterLoginAuth: String ?= "")
POST /login                      controllers.Auth.authenticate
GET  /register                   controllers.Auth.userregistration
POST /register                   controllers.Auth.registeruser
GET  /logout                     controllers.Auth.logout